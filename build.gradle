buildscript {
    ext {
        springBootVersion = '2.2.2.RELEASE'
        lombokVersion = '1.18.6'
        swaggerVersion = '2.9.2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    group = 'com.goonmeonity'
    version = '1.0' + new Date().format("yyyyMMddHHmmss")
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    sourceCompatibility = '11'
    targetCompatibility = '11'

    repositories {
        mavenCentral()
    }
    test { useJUnitPlatform() }

    dependencies {
        testImplementation('org.springframework.boot:spring-boot-starter-test')
        testImplementation group: 'junit', name: 'junit', version: '4.12'
        compileOnly ("org.projectlombok:lombok:${lombokVersion}")
        annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
        testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    }

    task initSourceFolders {
        sourceSets*.java.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
        sourceSets*.resources.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
    }
}
project(':goonmeonity-application') {
    dependencies {
        compile project(':goonmeonity-core')
        compile project(':goonmeonity-domain-rds')
    }
}

project(':goonmeonity-domain-rds') {
    dependencies {
        compile project(':goonmeonity-core')
    }
}
project(':goonmeonity-core') {
    dependencies {

    }
}